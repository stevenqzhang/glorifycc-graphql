
# Maps to https://github.com/TheoTech/glorifycc/blob/master/models/language.js
type Language {
    id: ID!
    label: String!
    code: String!
}

scalar Date

# Maps to https://github.com/TheoTech/glorifycc/blob/master/models/song.js
type Song {
    id: ID!
    title: String!
    author: String!

    # TODO type the languages as enums?
    lang: Language!
    translator: String
    contributor: String
    copyright: String
    lyrics: [String]
    oriSong: String
    timeAdded: Date
}

# Maps to https://github.com/TheoTech/glorifycc/blob/master/models/user.js
type User {
    id: ID!
    username: String!
    email: String!
    password: String!
    library: [Song!]        # library can be empty, so the array is nullable
}


# Maps to https://github.com/TheoTech/glorifycc/blob/master/models/playlist.js
type PlayList {
    id: ID!
    owner: User!
    name: String!
    song: Song!
    translationsChecked: [Song!]  # translationsChecked can be empty, so the array is nullable
    availableTranslations: [Song!]   #
}

type Mutation {
    addSong (
        title: String!,
        author: String!,
        lang: Language!,
        translator: String,
        contributor: String,
        lang: Language!,
        translator: String,
        contributor: String,
        copyright: String,
        lyrics: [String],
        oriSong: String,
        timeAdded: Date,
    ): Song
    deleteSong (id: ID!): Song
    updateSong (
        id: ID!,
        title: String,
        author: String,
        lang: Language,
        translator: String,
        contributor: String,
        lang: Language!,
        translator: String,
        contributor: String,
        copyright: String,
        lyrics: [String],
        oriSong: String,
        timeAdded: Date,
    ): Song
}